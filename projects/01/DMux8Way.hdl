// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Solver: khanasif786 -> www.github.com/khanasif786
    // There may be some short and efficient method. This solution
    // is only upto the limitations of this course.if there any better
    // solution than feel free to make a pull request.
    DMux(in=in, sel=sel[2], a=DMux1Out1, b=DMux1Out2);
    DMux4Way(in=DMux1Out1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=DMux1Out2, sel=sel[0..1], a=e, b=f, c=g, d=h);
}